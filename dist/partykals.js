var t=require("three"),e={getRandomBetween:function(t,e){return Math.random()*(e-t)+t},getRandomWithSpread:function(t,e){return e?this.getRandomBetween(t,t+e):t},getRandomColorBetween:function(e,i){return i?new t.Color(this.getRandomBetween(e.r,i.r),this.getRandomBetween(e.g,i.g),this.getRandomBetween(e.b,i.b)):e?e.clone():new t.Color},getRandomVectorBetween:function(e,i){return i?new t.Vector3(this.getRandomBetween(e.x,i.x),this.getRandomBetween(e.y,i.y),this.getRandomBetween(e.z,i.z)):e?e.clone():new t.Vector3},lerpColors:function(t,e,i){return t.clone().lerp(e,i)},lerp:function(t,e,i){return t*(1-i)+e*i},randomizerOrValue:function(t){return(t.generate?t.generate():t)||0}},i=function(t){this.system=t,this.reset()},o={worldPosition:{configurable:!0}};function r(e,i){return e?e.generate?e.generate():e.clone():i?null:new t.Vector3}function s(e,i){return e?e.generate?e.generate():e.clone():i?null:new t.Color(1,1,1)}i.prototype.reset=function(){var t=this.system.options.particles;this.age=0,this.finished=!1,this.gravity=t.gravity,this.velocity=r(t.velocity),t.velocityBonus&&this.velocity.add(t.velocityBonus),this.acceleration=r(t.acceleration,!0),this.position=r(t.offset),this.ttl=e.getRandomWithSpread(t.ttl||1,t.ttlExtra)||1,this.alpha=this.startAlpha=this.endAlpha=null,this.startAlphaChangeAt=(t.startAlphaChangeAt||0)/this.ttl,t.fade&&(void 0!==t.alpha?this.alpha=e.randomizerOrValue(t.alpha):(this.startAlpha=e.randomizerOrValue(t.startAlpha),this.endAlpha=e.randomizerOrValue(t.endAlpha))),this.colorize=Boolean(t.colorize),this.color=this.startColor=this.endColor=null,this.startColorChangeAt=(t.startColorChangeAt||0)/this.ttl,this.colorize&&(t.color?this.color=s(t.color):(this.startColor=s(t.startColor),this.endColor=s(t.endColor))),this.size=this.startSize=this.endSize=null,this.startSizeChangeAt=(t.startSizeChangeAt||0)/this.ttl,t.scaling&&(void 0!==t.size?this.size=e.randomizerOrValue(t.size):(this.startSize=e.randomizerOrValue(t.startSize),this.endSize=e.randomizerOrValue(t.endSize))),this.rotation=this.rotationSpeed=null,t.rotating&&(this.rotation=e.randomizerOrValue(t.rotation||0),this.rotationSpeed=e.randomizerOrValue(t.rotationSpeed||0)),this.startWorldPosition=null,this.onUpdate=t.onUpdate,t.onSpawn&&t.onSpawn(this)},i.prototype.update=function(t,i){if(!this.finished){0===this.age?(this.system.options.particles.worldPosition&&(this.startWorldPosition=this.system.getWorldPosition()),null===this.alpha&&null===this.startAlpha||this.system.setAlpha(t,this.alpha||this.startAlpha),null===this.color&&null===this.startColor||this.system.setColor(t,this.color||this.startColor),null===this.size&&null===this.startSize||this.system.setSize(t,this.size||this.startSize),null!==this.rotation&&this.system.setRotation(t,this.rotation)):(this.startColor&&this.age>=this.startColorChangeAt&&this.system.setColor(t,e.lerpColors(this.startColor,this.endColor,this.startColorChangeAt?(this.age-this.startColorChangeAt)/(1-this.startColorChangeAt):this.age)),null!=this.startAlpha&&this.age>=this.startAlphaChangeAt&&this.system.setAlpha(t,e.lerp(this.startAlpha,this.endAlpha,this.startAlphaChangeAt?(this.age-this.startAlphaChangeAt)/(1-this.startAlphaChangeAt):this.age)),null!=this.startSize&&this.age>=this.startSizeChangeAt&&this.system.setSize(t,e.lerp(this.startSize,this.endSize,this.startSizeChangeAt?(this.age-this.startSizeChangeAt)/(1-this.startSizeChangeAt):this.age))),this.gravity&&this.velocity&&(this.velocity.y+=this.gravity*i),this.rotationSpeed&&(this.rotation+=this.rotationSpeed*i,this.system.setRotation(t,this.rotation)),this.velocity&&(this.position.x+=this.velocity.x*i,this.position.y+=this.velocity.y*i,this.position.z+=this.velocity.z*i);var o=this.position;if(this.startWorldPosition){var r=this.system.getWorldPosition();r.sub(this.startWorldPosition),o=o.clone().sub(r)}this.system.setPosition(t,o),this.acceleration&&this.velocity&&(this.velocity.x+=this.acceleration.x*i,this.velocity.y+=this.acceleration.y*i,this.velocity.z+=this.acceleration.z*i),this.age+=i/this.ttl,this.onUpdate&&this.onUpdate(this),this.age>1&&(this.age=1,this.finished=!0)}},o.worldPosition.get=function(){return this.system.getWorldPosition().add(this.position)},Object.defineProperties(i.prototype,o);var n=function(e){this.options=e;var i={globalColor:{value:new t.Color(e.color||16777215)},rendererScale:{value:1}},o="";e.perspective&&(o+="#define PERSPECTIVE\n"),e.map&&(o+="#define TEXTURE\n",i.texture={value:e.map}),e.perParticleColor&&(o+="#define COLORING\n"),e.perParticleRotation&&(o+="#define ROTATION\n"),e.constSize&&(o+="#define CONST_SIZE\n",i.constSize={value:e.constSize}),e.alphaTest&&(o+="#define ALPHA_TEST\n");var r=new t.ShaderMaterial({uniforms:i,vertexShader:(o+="\n")+"\n// attributes we get from geometry\nattribute float alpha;\n\n// per-particle size\n#ifdef CONST_SIZE\n    uniform float constSize;\n#else\n    attribute float size;\n#endif\n\n// per-particle rotation\n#ifdef ROTATION\n    attribute float rotation;\n#endif\n\n// system scale when using perspective mode\n#ifdef PERSPECTIVE\n    uniform float rendererScale;\n#endif\n\n// output params for fragment shader\nvarying float vAlpha;\n\n// set per-particle color\n#ifdef COLORING\n    varying vec3 vColor;\n#endif\n\n// get per-particle rotation\n#ifdef ROTATION\n    varying float vRotation;\n#endif\n\n// vertex shader main\nvoid main() \n{\n    // alpha and color\n    vAlpha = alpha;\n\n    // set color\n    #ifdef COLORING\n        vColor = color;\n    #endif\n\n    // set const size\n    #ifdef CONST_SIZE\n        float size = constSize;\n    #endif\n\n    // set position\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n    gl_Position = projectionMatrix * mvPosition;\n\n    // apply rotation\n    #ifdef ROTATION\n        vRotation = rotation;\n    #endif\n    \n    // set size - either perspective or constant\n    #ifdef PERSPECTIVE\n        gl_PointSize = size * (rendererScale / length(mvPosition.xyz));\n    #else\n        gl_PointSize = size;\n    #endif\n}\n",fragmentShader:o+"\n// material uniforms\nuniform vec3 globalColor;\n\n// params we get from vertex shader\nvarying float vAlpha;\n\n// per-particle color from vertex shader\n#ifdef COLORING\n    varying vec3 vColor;\n#endif\n\n// per-particle rotation from vertex shader\n#ifdef ROTATION\n    varying float vRotation;\n#endif\n\n// diffuse texture\n#ifdef TEXTURE\n    uniform sampler2D texture;\n#endif\n\n// fragment shader main\nvoid main() \n{\n    // set default color if don't have per-particle colors\n    #ifndef COLORING\n        vec3 vColor = vec3(1,1,1);\n    #endif\n\n    // texture\n    #ifdef TEXTURE\n\n        // use rotation (rotate texture)\n        #ifdef ROTATION\n            float mid = 0.5;\n            vec2 rotated = vec2(cos(vRotation) * (gl_PointCoord.x - mid) + sin(vRotation) * (gl_PointCoord.y - mid) + mid,\n                          cos(vRotation) * (gl_PointCoord.y - mid) - sin(vRotation) * (gl_PointCoord.x - mid) + mid);\n            vec4 texture = texture2D(texture,  rotated);\n        // no rotation\n        #else\n            vec2 coords = vec2((gl_PointCoord.x - 0.5) + 0.5, (gl_PointCoord.y - 0.5) + 0.5);\n            vec4 texture = texture2D(texture, coords);\n        #endif\n\n        // get color with texture\n        gl_FragColor = vec4( globalColor * vColor, vAlpha ) * texture;\n        \n    // no texture (colors only)\n    #else\n        gl_FragColor = vec4( globalColor * vColor, vAlpha );\n    #endif\n\n    // check if need to discard pixel\n    #ifdef ALPHA_TEST\n        if (gl_FragColor.a < 0.00001) { discard; }\n    #endif\n}\n",transparent:Boolean(e.transparent),blending:e.blending,vertexColors:t.VertexColors,depthWrite:Boolean(e.depthWrite),depthTest:Boolean(e.depthTest)});this.material=r};n.prototype.dispose=function(){this.material.dispose()},n.prototype.setBaseScale=function(t){this.options.perspective&&(this.material.uniforms.rendererScale.value=t)};var a=function(e){e.particles=e.particles||{worldPosition:!0},e.system=e.system||{},this.options=e;var o=function(t){return null!=t},r=e.particles;if("number"==typeof e.particles.size&&(console.warn("Note: replaced 'size' with 'globalSize' property since its more efficient and provided size value was constant anyway."),e.particles.globalSize=e.particles.size,delete e.particles.size),e.particles.color instanceof t.Color&&(console.warn("Note: replaced 'color' with 'globalColor' property since its more efficient and you provided color value was constant anyway."),e.particles.globalColor=e.particles.color,delete e.particles.color),e.particles.fade=o(r.startAlpha)||o(r.alpha),e.particles.rotating=o(r.rotationSpeed)||o(r.rotation),e.particles.colorize=o(r.color)||o(r.startColor),e.particles.scaling=o(r.size)||o(r.startSize),o(r.startAlpha)&&!o(r.endAlpha))throw new Error("When providing 'startAlpha' you must also provide 'endAlpha'!");if(o(r.startAlpha)&&o(r.alpha))throw new Error("When providing 'alpha' you can't also provide 'startAlpha'!");if(o(r.startColor)&&!o(r.endColor))throw new Error("When providing 'startColor' you must also provide 'endColor'!");if(o(r.startColor)&&o(r.color))throw new Error("When providing 'color' you can't also provide 'startColor'!");if(o(r.startSize)&&!o(r.endSize))throw new Error("When providing 'startSize' you must also provide 'endSize'!");if(o(r.startSize)&&o(r.size))throw new Error("When providing 'size' you can't also provide 'startSize'!");var s=e.system.particlesCount||10,a=e.particles.blending||"opaque",l={opaque:t.NoBlending,additive:t.AdditiveBlending,multiply:t.MultiplyBlending,blend:t.NormalBlending}[a];if(this._emitters=[],e.system.emitters)if(e.system.emitters instanceof Array)for(var h=0;h<e.system.emitters.length;++h)this.addEmitter(e.system.emitters[h]);else this.addEmitter(e.system.emitters);var p="opaque"!==a;this.particlesGeometry=new t.BufferGeometry;var c=void 0===e.system.perspective||Boolean(e.system.perspective),d=new n({size:e.particles.size||10,color:e.particles.globalColor||16777215,blending:l,perspective:c,transparent:p,map:e.particles.texture,perParticleColor:Boolean(e.particles.colorize),alphaTest:"blend"===a&&o(e.particles.texture),constSize:o(e.particles.globalSize)?e.particles.globalSize:null,depthWrite:!o(e.system.depthWrite)||e.system.depthWrite,depthTest:!o(e.system.depthTest)||e.system.depthTest,perParticleRotation:e.particles.rotating});this.material=d,this.speed=e.system.speed||1,this.reset(),this._aliveParticles=[],this._deadParticles=[];for(var u=new Float32Array(3*s),m=e.particles.colorize?new Float32Array(3*s):null,f=e.particles.fade?new Float32Array(1*s):null,y=e.particles.scaling?new Float32Array(1*s):null,g=e.particles.rotating?new Float32Array(1*s):null,v=0;v<s;v++){var C=3*v;u[C]=u[C+1]=u[C+2]=0,m&&(m[C]=m[C+1]=m[C+2]=1),f&&(f[v]=1),y&&(y[v]=1),g&&(g[v]=0),this._deadParticles.push(new i(this))}this.particlesGeometry.setAttribute("position",new t.BufferAttribute(u,3)),f&&this.particlesGeometry.setAttribute("alpha",new t.BufferAttribute(f,1)),m&&this.particlesGeometry.setAttribute("color",new t.BufferAttribute(m,3)),y&&this.particlesGeometry.setAttribute("size",new t.BufferAttribute(y,1)),g&&this.particlesGeometry.setAttribute("rotation",new t.BufferAttribute(g,1)),this.particlesGeometry.setDrawRange(0,0),this.material.setBaseScale(e.system.scale||400);var z=new t.Points(this.particlesGeometry,this.material.material);z.sortParticles=p,this.particleSystem=z,this._positionDirty=!0,this._colorsDirty=Boolean(m),this._alphaDirty=Boolean(f),this._rotateDirty=Boolean(g),e.container&&this.addTo(e.container)},l={finished:{configurable:!0},ttlExpired:{configurable:!0},particlesCount:{configurable:!0},maxParticlesCount:{configurable:!0}};a.prototype.addEmitter=function(t){this._emitters.push(t)},a.prototype.dispose=function(){this.particlesGeometry.dispose(),this.material.dispose()},l.finished.get=function(){return this.ttlExpired&&0===this.particlesCount},l.ttlExpired.get=function(){return void 0!==this.ttl&&this.ttl<=0},a.prototype.reset=function(){this.ttl=this.options.system.ttl,this.age=0,this._timeToUpdateBS=0},a.prototype.getWorldPosition=function(){var e=new t.Vector3;return this.particleSystem.getWorldPosition(e),e},a.prototype.addTo=function(t){t.add(this.particleSystem)},a.prototype.setColor=function(t,e){var i=this.particlesGeometry.attributes.color.array;i[t*=3]=e.r,i[t+1]=e.g,i[t+2]=e.b,this._colorsDirty=!0},a.prototype.setPosition=function(t,e){var i=this.particlesGeometry.attributes.position.array;i[t*=3]=e.x,i[t+1]=e.y,i[t+2]=e.z,this._positionDirty=!0},a.prototype.setAlpha=function(t,e){this.particlesGeometry.attributes.alpha.array[t]=e,this._alphaDirty=!0},a.prototype.setRotation=function(t,e){this.particlesGeometry.attributes.rotation.array[t]=e,this._rotateDirty=!0},a.prototype.setSize=function(t,e){this.particlesGeometry.attributes.size.array[t]=e,this._sizeDirty=!0},l.particlesCount.get=function(){return this._aliveParticles.length},l.maxParticlesCount.get=function(){return this._aliveParticles.length+this._deadParticles.length},a.prototype.removeAndDisposeIfFinished=function(){return!!this.finished&&(this.removeSelf(),this.dispose(),!0)},a.prototype.update=function(t){if(void 0===t){var e=(new Date).getTime()/1e3;t=e-this._lastTime||0,this._lastTime=e}if(0!==t){void 0!==this.ttl&&this.ttl>0&&(this.ttl-=t),this.dt=t*=this.speed,this.age+=t;var i=this._aliveParticles.length;if(!this.ttlExpired)for(var o=0;o<this._emitters.length;++o){var r=this._emitters[o].update(t,this);r&&this.spawnParticles(r)}for(o=this._aliveParticles.length-1;o>=0;--o){var s=this._aliveParticles[o];s.update(o,t),s.finished&&(this._aliveParticles.splice(o,1),this._deadParticles.push(s))}i!==this._aliveParticles.length&&this.particlesGeometry.setDrawRange(0,this._aliveParticles.length),this.particlesGeometry.attributes.position.needsUpdate=this._positionDirty,this._needBoundingSphereUpdate=this._needBoundingSphereUpdate||this._positionDirty,this._positionDirty=!1,this._colorsDirty&&(this.particlesGeometry.attributes.color.needsUpdate=!0,this._colorsDirty=!1),this._alphaDirty&&(this.particlesGeometry.attributes.alpha.needsUpdate=!0,this._alphaDirty=!1),this._sizeDirty&&(this.particlesGeometry.attributes.size.needsUpdate=!0,this._sizeDirty=!1),this._rotateDirty&&(this.particlesGeometry.attributes.rotation.needsUpdate=!0,this._rotateDirty=!1),this._needBoundingSphereUpdate&&(this._timeToUpdateBS-=t,this._timeToUpdateBS<=0&&(this._timeToUpdateBS=.2,this.particlesGeometry.computeBoundingSphere())),this.finished||this.options.system.onUpdate&&this.options.system.onUpdate(this)}},a.prototype.spawnParticles=function(t){for(var e=0;e<t;++e){if(0===this._deadParticles.length)return;var i=this._deadParticles.pop();i.reset(),this._aliveParticles.push(i)}},a.prototype.removeSelf=function(){this.particleSystem.parent&&this.particleSystem.parent.remove(this.particleSystem)},Object.defineProperties(a.prototype,l);var h=e.randomizerOrValue,p=function(t){this.options=t,t.interval=t.interval||1,this.age=0,this.timeToSpawn=Math.random()*h(t.interval)};p.prototype.update=function(t,e){var i=0;return 0===this.age&&this.options.onSpawnBurst&&(i+=h(this.options.onSpawnBurst)),this.age+=t,this.options.onInterval?(this.timeToSpawn-=t,this.timeToSpawn<=0&&(this.timeToSpawn=h(this.options.interval),i+=h(this.options.onInterval)),this.options.detoretingMinTtl&&e.ttl<this.options.detoretingMinTtl&&(i*=e.ttl/this.options.detoretingMinTtl),i):i};var c=function(){};function d(){return 2*Math.random()-1}c.prototype.generate=function(){throw new Error("Not implemented.")};var u={Randomizer:c,BoxRandomizer:function(i){function o(e,o){i.call(this),this.min=e||new t.Vector3(-1,-1,-1),this.max=o||new t.Vector3(1,1,1)}return i&&(o.__proto__=i),(o.prototype=Object.create(i&&i.prototype)).constructor=o,o.prototype.generate=function(){return e.getRandomVectorBetween(this.min,this.max)},o}(c),SphereRandomizer:function(i){function o(t,e,o,r,s){i.call(this),this.maxRadius=t||1,this.minRadius=e||0,this.scaler=o,this.minVector=r,this.maxVector=s}return i&&(o.__proto__=i),(o.prototype=Object.create(i&&i.prototype)).constructor=o,o.prototype.generate=function(){var i=new t.Vector3(d(),d(),d());return(this.minVector||this.maxVector)&&i.clamp(this.minVector||new t.Vector3(-1,-1,-1),this.maxVector||new t.Vector3(1,1,1)),i.normalize().multiplyScalar(e.getRandomBetween(this.minRadius,this.maxRadius)),this.scaler&&i.multiply(this.scaler),i},o}(c),ColorsRandomizer:function(i){function o(e,o){i.call(this),this.min=e||new t.Color(0,0,0),this.max=o||new t.Color(1,1,1)}return i&&(o.__proto__=i),(o.prototype=Object.create(i&&i.prototype)).constructor=o,o.prototype.generate=function(){return e.getRandomColorBetween(this.min,this.max)},o}(c),MinMaxRandomizer:function(t){function i(e,i){t.call(this),this.min=e,this.max=i}return t&&(i.__proto__=t),(i.prototype=Object.create(t&&t.prototype)).constructor=i,i.prototype.generate=function(){return e.getRandomBetween(this.min,this.max)},i}(c)};exports.ParticlesSystem=a,exports.Particle=i,exports.Emitter=p,exports.Utils=e,exports.Randomizers=u;
//# sourceMappingURL=partykals.js.map
