!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("three")):"function"==typeof define&&define.amd?define(["exports","three"],e):e(t.partykals={},t.three)}(this,function(t,e){var i={getRandomBetween:function(t,e){return Math.random()*(e-t)+t},getRandomWithSpread:function(t,e){return e?this.getRandomBetween(t,t+e):t},getRandomColorBetween:function(t,i){return i?new e.Color(this.getRandomBetween(t.r,i.r),this.getRandomBetween(t.g,i.g),this.getRandomBetween(t.b,i.b)):t?t.clone():new e.Color},getRandomVectorBetween:function(t,i){return i?new e.Vector3(this.getRandomBetween(t.x,i.x),this.getRandomBetween(t.y,i.y),this.getRandomBetween(t.z,i.z)):t?t.clone():new e.Vector3},lerpColors:function(t,e,i){return t.clone().lerp(e,i)},lerp:function(t,e,i){return t*(1-i)+e*i},randomizerOrValue:function(t){return(t.generate?t.generate():t)||0}},o=function(t){this.system=t,this.reset()},r={worldPosition:{configurable:!0}};function s(t,i){return t?t.generate?t.generate():t.clone():i?null:new e.Vector3}function n(t,i){return t?t.generate?t.generate():t.clone():i?null:new e.Color(1,1,1)}o.prototype.reset=function(){var t=this.system.options.particles;this.age=0,this.finished=!1,this.gravity=t.gravity,this.velocity=s(t.velocity),t.velocityBonus&&this.velocity.add(t.velocityBonus),this.acceleration=s(t.acceleration,!0),this.position=s(t.offset),this.ttl=i.getRandomWithSpread(t.ttl||1,t.ttlExtra)||1,this.alpha=this.startAlpha=this.endAlpha=null,this.startAlphaChangeAt=(t.startAlphaChangeAt||0)/this.ttl,t.fade&&(void 0!==t.alpha?this.alpha=i.randomizerOrValue(t.alpha):(this.startAlpha=i.randomizerOrValue(t.startAlpha),this.endAlpha=i.randomizerOrValue(t.endAlpha))),this.colorize=Boolean(t.colorize),this.color=this.startColor=this.endColor=null,this.startColorChangeAt=(t.startColorChangeAt||0)/this.ttl,this.colorize&&(t.color?this.color=n(t.color):(this.startColor=n(t.startColor),this.endColor=n(t.endColor))),this.size=this.startSize=this.endSize=null,this.startSizeChangeAt=(t.startSizeChangeAt||0)/this.ttl,t.scaling&&(void 0!==t.size?this.size=i.randomizerOrValue(t.size):(this.startSize=i.randomizerOrValue(t.startSize),this.endSize=i.randomizerOrValue(t.endSize))),this.rotation=this.rotationSpeed=null,t.rotating&&(this.rotation=i.randomizerOrValue(t.rotation||0),this.rotationSpeed=i.randomizerOrValue(t.rotationSpeed||0)),this.startWorldPosition=null,this.onUpdate=t.onUpdate,t.onSpawn&&t.onSpawn(this)},o.prototype.update=function(t,e){if(!this.finished){0===this.age?(this.system.options.particles.worldPosition&&(this.startWorldPosition=this.system.getWorldPosition()),null===this.alpha&&null===this.startAlpha||this.system.setAlpha(t,this.alpha||this.startAlpha),null===this.color&&null===this.startColor||this.system.setColor(t,this.color||this.startColor),null===this.size&&null===this.startSize||this.system.setSize(t,this.size||this.startSize),null!==this.rotation&&this.system.setRotation(t,this.rotation)):(this.startColor&&this.age>=this.startColorChangeAt&&this.system.setColor(t,i.lerpColors(this.startColor,this.endColor,this.startColorChangeAt?(this.age-this.startColorChangeAt)/(1-this.startColorChangeAt):this.age)),null!=this.startAlpha&&this.age>=this.startAlphaChangeAt&&this.system.setAlpha(t,i.lerp(this.startAlpha,this.endAlpha,this.startAlphaChangeAt?(this.age-this.startAlphaChangeAt)/(1-this.startAlphaChangeAt):this.age)),null!=this.startSize&&this.age>=this.startSizeChangeAt&&this.system.setSize(t,i.lerp(this.startSize,this.endSize,this.startSizeChangeAt?(this.age-this.startSizeChangeAt)/(1-this.startSizeChangeAt):this.age))),this.gravity&&this.velocity&&(this.velocity.y+=this.gravity*e),this.rotationSpeed&&(this.rotation+=this.rotationSpeed*e,this.system.setRotation(t,this.rotation)),this.velocity&&(this.position.x+=this.velocity.x*e,this.position.y+=this.velocity.y*e,this.position.z+=this.velocity.z*e);var o=this.position;if(this.startWorldPosition){var r=this.system.getWorldPosition();r.sub(this.startWorldPosition),o=o.clone().sub(r)}this.system.setPosition(t,o),this.acceleration&&this.velocity&&(this.velocity.x+=this.acceleration.x*e,this.velocity.y+=this.acceleration.y*e,this.velocity.z+=this.acceleration.z*e),this.age+=e/this.ttl,this.onUpdate&&this.onUpdate(this),this.age>1&&(this.age=1,this.finished=!0)}},r.worldPosition.get=function(){return this.system.getWorldPosition().add(this.position)},Object.defineProperties(o.prototype,r);var a=function(t){this.options=t;var i={globalColor:{value:new e.Color(t.color||16777215)},rendererScale:{value:1}},o="";t.perspective&&(o+="#define PERSPECTIVE\n"),t.map&&(o+="#define TEXTURE\n",i.texture={value:t.map}),t.perParticleColor&&(o+="#define COLORING\n"),t.perParticleRotation&&(o+="#define ROTATION\n"),t.constSize&&(o+="#define CONST_SIZE\n",i.constSize={value:t.constSize}),t.alphaTest&&(o+="#define ALPHA_TEST\n");var r=new e.ShaderMaterial({uniforms:i,vertexShader:(o+="\n")+"\n// attributes we get from geometry\nattribute float alpha;\n\n// per-particle size\n#ifdef CONST_SIZE\n    uniform float constSize;\n#else\n    attribute float size;\n#endif\n\n// per-particle rotation\n#ifdef ROTATION\n    attribute float rotation;\n#endif\n\n// system scale when using perspective mode\n#ifdef PERSPECTIVE\n    uniform float rendererScale;\n#endif\n\n// output params for fragment shader\nvarying float vAlpha;\n\n// set per-particle color\n#ifdef COLORING\n    varying vec3 vColor;\n#endif\n\n// get per-particle rotation\n#ifdef ROTATION\n    varying float vRotation;\n#endif\n\n// vertex shader main\nvoid main() \n{\n    // alpha and color\n    vAlpha = alpha;\n\n    // set color\n    #ifdef COLORING\n        vColor = color;\n    #endif\n\n    // set const size\n    #ifdef CONST_SIZE\n        float size = constSize;\n    #endif\n\n    // set position\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n    gl_Position = projectionMatrix * mvPosition;\n\n    // apply rotation\n    #ifdef ROTATION\n        vRotation = rotation;\n    #endif\n    \n    // set size - either perspective or constant\n    #ifdef PERSPECTIVE\n        gl_PointSize = size * (rendererScale / length(mvPosition.xyz));\n    #else\n        gl_PointSize = size;\n    #endif\n}\n",fragmentShader:o+"\n// material uniforms\nuniform vec3 globalColor;\n\n// params we get from vertex shader\nvarying float vAlpha;\n\n// per-particle color from vertex shader\n#ifdef COLORING\n    varying vec3 vColor;\n#endif\n\n// per-particle rotation from vertex shader\n#ifdef ROTATION\n    varying float vRotation;\n#endif\n\n// diffuse texture\n#ifdef TEXTURE\n    uniform sampler2D texture;\n#endif\n\n// fragment shader main\nvoid main() \n{\n    // set default color if don't have per-particle colors\n    #ifndef COLORING\n        vec3 vColor = vec3(1,1,1);\n    #endif\n\n    // texture\n    #ifdef TEXTURE\n\n        // use rotation (rotate texture)\n        #ifdef ROTATION\n            float mid = 0.5;\n            vec2 rotated = vec2(cos(vRotation) * (gl_PointCoord.x - mid) + sin(vRotation) * (gl_PointCoord.y - mid) + mid,\n                          cos(vRotation) * (gl_PointCoord.y - mid) - sin(vRotation) * (gl_PointCoord.x - mid) + mid);\n            vec4 texture = texture2D(texture,  rotated);\n        // no rotation\n        #else\n            vec2 coords = vec2((gl_PointCoord.x - 0.5) + 0.5, (gl_PointCoord.y - 0.5) + 0.5);\n            vec4 texture = texture2D(texture, coords);\n        #endif\n\n        // get color with texture\n        gl_FragColor = vec4( globalColor * vColor, vAlpha ) * texture;\n        \n    // no texture (colors only)\n    #else\n        gl_FragColor = vec4( globalColor * vColor, vAlpha );\n    #endif\n\n    // check if need to discard pixel\n    #ifdef ALPHA_TEST\n        if (gl_FragColor.a < 0.00001) { discard; }\n    #endif\n}\n",transparent:Boolean(t.transparent),blending:t.blending,vertexColors:e.VertexColors,depthWrite:Boolean(t.depthWrite),depthTest:Boolean(t.depthTest)});this.material=r};a.prototype.dispose=function(){this.material.dispose()},a.prototype.setBaseScale=function(t){this.options.perspective&&(this.material.uniforms.rendererScale.value=t)};var l=function(t){t.particles=t.particles||{worldPosition:!0},t.system=t.system||{},this.options=t;var i=function(t){return null!=t},r=t.particles;if("number"==typeof t.particles.size&&(console.warn("Note: replaced 'size' with 'globalSize' property since its more efficient and provided size value was constant anyway."),t.particles.globalSize=t.particles.size,delete t.particles.size),t.particles.color instanceof e.Color&&(console.warn("Note: replaced 'color' with 'globalColor' property since its more efficient and you provided color value was constant anyway."),t.particles.globalColor=t.particles.color,delete t.particles.color),t.particles.fade=i(r.startAlpha)||i(r.alpha),t.particles.rotating=i(r.rotationSpeed)||i(r.rotation),t.particles.colorize=i(r.color)||i(r.startColor),t.particles.scaling=i(r.size)||i(r.startSize),i(r.startAlpha)&&!i(r.endAlpha))throw new Error("When providing 'startAlpha' you must also provide 'endAlpha'!");if(i(r.startAlpha)&&i(r.alpha))throw new Error("When providing 'alpha' you can't also provide 'startAlpha'!");if(i(r.startColor)&&!i(r.endColor))throw new Error("When providing 'startColor' you must also provide 'endColor'!");if(i(r.startColor)&&i(r.color))throw new Error("When providing 'color' you can't also provide 'startColor'!");if(i(r.startSize)&&!i(r.endSize))throw new Error("When providing 'startSize' you must also provide 'endSize'!");if(i(r.startSize)&&i(r.size))throw new Error("When providing 'size' you can't also provide 'startSize'!");var s=t.system.particlesCount||10,n=t.particles.blending||"opaque",l={opaque:e.NoBlending,additive:e.AdditiveBlending,multiply:e.MultiplyBlending,blend:e.NormalBlending}[n];if(this._emitters=[],t.system.emitters)if(t.system.emitters instanceof Array)for(var h=0;h<t.system.emitters.length;++h)this.addEmitter(t.system.emitters[h]);else this.addEmitter(t.system.emitters);var p="opaque"!==n;this.particlesGeometry=new e.BufferGeometry;var c=void 0===t.system.perspective||Boolean(t.system.perspective),d=new a({size:t.particles.size||10,color:t.particles.globalColor||16777215,blending:l,perspective:c,transparent:p,map:t.particles.texture,perParticleColor:Boolean(t.particles.colorize),alphaTest:"blend"===n&&i(t.particles.texture),constSize:i(t.particles.globalSize)?t.particles.globalSize:null,depthWrite:!i(t.system.depthWrite)||t.system.depthWrite,depthTest:!i(t.system.depthTest)||t.system.depthTest,perParticleRotation:t.particles.rotating});this.material=d,this.speed=t.system.speed||1,this.reset(),this._aliveParticles=[],this._deadParticles=[];for(var u=new Float32Array(3*s),m=t.particles.colorize?new Float32Array(3*s):null,f=t.particles.fade?new Float32Array(1*s):null,y=t.particles.scaling?new Float32Array(1*s):null,g=t.particles.rotating?new Float32Array(1*s):null,v=0;v<s;v++){var C=3*v;u[C]=u[C+1]=u[C+2]=0,m&&(m[C]=m[C+1]=m[C+2]=1),f&&(f[v]=1),y&&(y[v]=1),g&&(g[v]=0),this._deadParticles.push(new o(this))}this.particlesGeometry.setAttribute("position",new e.BufferAttribute(u,3)),f&&this.particlesGeometry.setAttribute("alpha",new e.BufferAttribute(f,1)),m&&this.particlesGeometry.setAttribute("color",new e.BufferAttribute(m,3)),y&&this.particlesGeometry.setAttribute("size",new e.BufferAttribute(y,1)),g&&this.particlesGeometry.setAttribute("rotation",new e.BufferAttribute(g,1)),this.particlesGeometry.setDrawRange(0,0),this.material.setBaseScale(t.system.scale||400);var z=new e.Points(this.particlesGeometry,this.material.material);z.sortParticles=p,this.particleSystem=z,this._positionDirty=!0,this._colorsDirty=Boolean(m),this._alphaDirty=Boolean(f),this._rotateDirty=Boolean(g),t.container&&this.addTo(t.container)},h={finished:{configurable:!0},ttlExpired:{configurable:!0},particlesCount:{configurable:!0},maxParticlesCount:{configurable:!0}};l.prototype.addEmitter=function(t){this._emitters.push(t)},l.prototype.dispose=function(){this.particlesGeometry.dispose(),this.material.dispose()},h.finished.get=function(){return this.ttlExpired&&0===this.particlesCount},h.ttlExpired.get=function(){return void 0!==this.ttl&&this.ttl<=0},l.prototype.reset=function(){this.ttl=this.options.system.ttl,this.age=0,this._timeToUpdateBS=0},l.prototype.getWorldPosition=function(){var t=new e.Vector3;return this.particleSystem.getWorldPosition(t),t},l.prototype.addTo=function(t){t.add(this.particleSystem)},l.prototype.setColor=function(t,e){var i=this.particlesGeometry.attributes.color.array;i[t*=3]=e.r,i[t+1]=e.g,i[t+2]=e.b,this._colorsDirty=!0},l.prototype.setPosition=function(t,e){var i=this.particlesGeometry.attributes.position.array;i[t*=3]=e.x,i[t+1]=e.y,i[t+2]=e.z,this._positionDirty=!0},l.prototype.setAlpha=function(t,e){this.particlesGeometry.attributes.alpha.array[t]=e,this._alphaDirty=!0},l.prototype.setRotation=function(t,e){this.particlesGeometry.attributes.rotation.array[t]=e,this._rotateDirty=!0},l.prototype.setSize=function(t,e){this.particlesGeometry.attributes.size.array[t]=e,this._sizeDirty=!0},h.particlesCount.get=function(){return this._aliveParticles.length},h.maxParticlesCount.get=function(){return this._aliveParticles.length+this._deadParticles.length},l.prototype.removeAndDisposeIfFinished=function(){return!!this.finished&&(this.removeSelf(),this.dispose(),!0)},l.prototype.update=function(t){if(void 0===t){var e=(new Date).getTime()/1e3;t=e-this._lastTime||0,this._lastTime=e}if(0!==t){void 0!==this.ttl&&this.ttl>0&&(this.ttl-=t),this.dt=t*=this.speed,this.age+=t;var i=this._aliveParticles.length;if(!this.ttlExpired)for(var o=0;o<this._emitters.length;++o){var r=this._emitters[o].update(t,this);r&&this.spawnParticles(r)}for(o=this._aliveParticles.length-1;o>=0;--o){var s=this._aliveParticles[o];s.update(o,t),s.finished&&(this._aliveParticles.splice(o,1),this._deadParticles.push(s))}i!==this._aliveParticles.length&&this.particlesGeometry.setDrawRange(0,this._aliveParticles.length),this.particlesGeometry.attributes.position.needsUpdate=this._positionDirty,this._needBoundingSphereUpdate=this._needBoundingSphereUpdate||this._positionDirty,this._positionDirty=!1,this._colorsDirty&&(this.particlesGeometry.attributes.color.needsUpdate=!0,this._colorsDirty=!1),this._alphaDirty&&(this.particlesGeometry.attributes.alpha.needsUpdate=!0,this._alphaDirty=!1),this._sizeDirty&&(this.particlesGeometry.attributes.size.needsUpdate=!0,this._sizeDirty=!1),this._rotateDirty&&(this.particlesGeometry.attributes.rotation.needsUpdate=!0,this._rotateDirty=!1),this._needBoundingSphereUpdate&&(this._timeToUpdateBS-=t,this._timeToUpdateBS<=0&&(this._timeToUpdateBS=.2,this.particlesGeometry.computeBoundingSphere())),this.finished||this.options.system.onUpdate&&this.options.system.onUpdate(this)}},l.prototype.spawnParticles=function(t){for(var e=0;e<t;++e){if(0===this._deadParticles.length)return;var i=this._deadParticles.pop();i.reset(),this._aliveParticles.push(i)}},l.prototype.removeSelf=function(){this.particleSystem.parent&&this.particleSystem.parent.remove(this.particleSystem)},Object.defineProperties(l.prototype,h);var p=i.randomizerOrValue,c=function(t){this.options=t,t.interval=t.interval||1,this.age=0,this.timeToSpawn=Math.random()*p(t.interval)};c.prototype.update=function(t,e){var i=0;return 0===this.age&&this.options.onSpawnBurst&&(i+=p(this.options.onSpawnBurst)),this.age+=t,this.options.onInterval?(this.timeToSpawn-=t,this.timeToSpawn<=0&&(this.timeToSpawn=p(this.options.interval),i+=p(this.options.onInterval)),this.options.detoretingMinTtl&&e.ttl<this.options.detoretingMinTtl&&(i*=e.ttl/this.options.detoretingMinTtl),i):i};var d=function(){};function u(){return 2*Math.random()-1}d.prototype.generate=function(){throw new Error("Not implemented.")};var m={Randomizer:d,BoxRandomizer:function(t){function o(i,o){t.call(this),this.min=i||new e.Vector3(-1,-1,-1),this.max=o||new e.Vector3(1,1,1)}return t&&(o.__proto__=t),(o.prototype=Object.create(t&&t.prototype)).constructor=o,o.prototype.generate=function(){return i.getRandomVectorBetween(this.min,this.max)},o}(d),SphereRandomizer:function(t){function o(e,i,o,r,s){t.call(this),this.maxRadius=e||1,this.minRadius=i||0,this.scaler=o,this.minVector=r,this.maxVector=s}return t&&(o.__proto__=t),(o.prototype=Object.create(t&&t.prototype)).constructor=o,o.prototype.generate=function(){var t=new e.Vector3(u(),u(),u());return(this.minVector||this.maxVector)&&t.clamp(this.minVector||new e.Vector3(-1,-1,-1),this.maxVector||new e.Vector3(1,1,1)),t.normalize().multiplyScalar(i.getRandomBetween(this.minRadius,this.maxRadius)),this.scaler&&t.multiply(this.scaler),t},o}(d),ColorsRandomizer:function(t){function o(i,o){t.call(this),this.min=i||new e.Color(0,0,0),this.max=o||new e.Color(1,1,1)}return t&&(o.__proto__=t),(o.prototype=Object.create(t&&t.prototype)).constructor=o,o.prototype.generate=function(){return i.getRandomColorBetween(this.min,this.max)},o}(d),MinMaxRandomizer:function(t){function e(e,i){t.call(this),this.min=e,this.max=i}return t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e,e.prototype.generate=function(){return i.getRandomBetween(this.min,this.max)},e}(d)};t.ParticlesSystem=l,t.Particle=o,t.Emitter=c,t.Utils=i,t.Randomizers=m});
//# sourceMappingURL=partykals.umd.js.map
